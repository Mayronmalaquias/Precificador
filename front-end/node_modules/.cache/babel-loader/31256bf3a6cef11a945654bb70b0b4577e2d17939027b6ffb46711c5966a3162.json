{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Best Option Notebook\\\\Desktop\\\\61E\\\\Precificador - Copia (2)\\\\front-end\\\\src\\\\components\\\\ReporteImovelWidget.jsx\",\n  _s = $RefreshSig$();\n// ============================\n// ReporteImovelWidget.jsx\n// ============================\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\n/**\r\n * Widget para consultar /reporteImovel retornando PDF ou JSON.\r\n *\r\n * @param {string} apiBase - Caminho base do endpoint. Pode ser relativo (\"/api/reporteImovel\")\r\n *                           ou absoluto (\"http://localhost:5000/reporteImovel\").\r\n * @param {string} defaultCodigo - Código carregado automaticamente ao montar.\r\n * @param {boolean} autoFocus - Focar o input ao montar (quando não houver defaultCodigo/URL).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReporteImovelWidget({\n  apiBase = \"/api/reporteImovel\",\n  defaultCodigo = \"\",\n  autoFocus = true\n}) {\n  _s();\n  const [codigo, setCodigo] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [jsonData, setJsonData] = useState(null);\n  const [textData, setTextData] = useState(\"\");\n  const [pdfUrl, setPdfUrl] = useState(\"\");\n  const abortRef = useRef(null);\n  const lastPdfUrlRef = useRef(\"\");\n\n  // Resolve apiBase de forma robusta (suporta relativo/absoluto)\n  const buildUrl = useCallback(cod => {\n    const u = String(cod !== null && cod !== void 0 ? cod : \"\").trim();\n    const base = (() => {\n      try {\n        // Se apiBase já é absoluta, new URL não usa origin\n        return new URL(apiBase, window.location.origin).toString();\n      } catch {\n        return apiBase; // fallback\n      }\n    })();\n    const qs = new URLSearchParams({\n      codigo: u\n    });\n    return `${base}${base.includes(\"?\") ? \"&\" : \"?\"}${qs}`;\n  }, [apiBase]);\n  const revokeLastPdf = () => {\n    if (lastPdfUrlRef.current) {\n      URL.revokeObjectURL(lastPdfUrlRef.current);\n      lastPdfUrlRef.current = \"\";\n    }\n  };\n  const isPdfBlob = async blob => {\n    if (blob.type && blob.type.includes(\"pdf\")) return true;\n    try {\n      const head = await blob.slice(0, 5).text();\n      return head.startsWith(\"%PDF-\");\n    } catch {\n      return false;\n    }\n  };\n  const resetState = () => {\n    setJsonData(null);\n    setTextData(\"\");\n    setPdfUrl(\"\");\n    revokeLastPdf();\n  };\n  const fetchData = useCallback(async codArg => {\n    const cod = String(codArg !== null && codArg !== void 0 ? codArg : codigo).trim();\n    if (!cod) {\n      setError(\"Informe um código.\");\n      resetState();\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    resetState();\n    try {\n      if (abortRef.current) abortRef.current.abort();\n      const controller = new AbortController();\n      abortRef.current = controller;\n      const url = buildUrl(cod);\n\n      // Pedimos explicitamente JSON ou PDF. Evita alguns servidores devolverem HTML por fallback.\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          // Damos preferência clara a JSON/PDF em vez de */*\n          Accept: \"application/json, application/pdf;q=0.9, text/plain;q=0.8, */*;q=0.1\",\n          \"X-Requested-With\": \"fetch\" // ajuda alguns back-ends a diferenciar requisições XHR\n        },\n        signal: controller.signal,\n        credentials: \"same-origin\",\n        redirect: \"follow\"\n      });\n\n      // Erros HTTP explícitos\n      if (!res.ok) {\n        const fallback = await res.text().catch(() => \"\");\n        throw new Error(`HTTP ${res.status} - ${res.statusText}${fallback ? ` | ${fallback.slice(0, 200)}` : \"\"}`);\n      }\n      const ct = (res.headers.get(\"content-type\") || \"\").toLowerCase();\n      const cd = res.headers.get(\"content-disposition\") || \"\";\n      const blob = await res.blob();\n\n      // 1) JSON\n      if (ct.includes(\"application/json\")) {\n        const text = await blob.text();\n        try {\n          const json = JSON.parse(text);\n          setJsonData(json);\n          return;\n        } catch {\n          // JSON inválido: trata como texto\n          setTextData(text);\n          return;\n        }\n      }\n\n      // 2) PDF (por content-type OU por assinatura OU por Content-Disposition)\n      const looksLikePdf = ct.includes(\"application/pdf\") || cd.toLowerCase().includes(\"filename=\") || (await isPdfBlob(blob));\n      if (looksLikePdf) {\n        const urlObj = URL.createObjectURL(blob);\n        setPdfUrl(urlObj);\n        lastPdfUrlRef.current = urlObj;\n        return;\n      }\n\n      // 3) Texto\n      const text = await blob.text();\n\n      // Heurística: se veio HTML da SPA, sinalizar erro amigável\n      const textLower = text.slice(0, 256).toLowerCase();\n      const isLikelySpaHtml = ct.includes(\"text/html\") || textLower.includes(\"<!doctype html\") || textLower.includes(\"<html\");\n      if (isLikelySpaHtml) {\n        setError(\"O servidor respondeu com HTML da aplicação (SPA), não com a API. Verifique o caminho do endpoint, o proxy e a configuração do servidor.\");\n        setTextData(\"\"); // evita poluir a UI com o HTML inteiro\n        return;\n      }\n\n      // Caso seja realmente texto puro útil (ex.: debug), mostramos\n      setTextData(text);\n    } catch (err) {\n      if ((err === null || err === void 0 ? void 0 : err.name) === \"AbortError\") return;\n      setError((err === null || err === void 0 ? void 0 : err.message) || \"Erro na requisição\");\n    } finally {\n      setLoading(false);\n    }\n  }, [codigo, buildUrl]);\n  useEffect(() => () => revokeLastPdf(), []);\n\n  // Query string ?codigo= ou defaultCodigo\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const fromUrl = params.get(\"codigo\");\n    if (fromUrl) {\n      setCodigo(fromUrl);\n      fetchData(fromUrl);\n    } else if (defaultCodigo) {\n      setCodigo(defaultCodigo);\n      fetchData(defaultCodigo);\n    } else if (autoFocus) {\n      const el = document.querySelector(\"#riw-codigo-input\");\n      if (el) el.focus();\n    }\n  }, [defaultCodigo, autoFocus, fetchData]);\n  const onSubmit = e => {\n    e.preventDefault();\n    fetchData();\n  };\n  const prettyJson = useMemo(() => {\n    try {\n      return jsonData ? JSON.stringify(jsonData, null, 2) : \"\";\n    } catch {\n      return \"\";\n    }\n  }, [jsonData]);\n  const onDownload = () => {\n    const baseName = `reporteImovel_${(codigo || \"resultado\").trim()}`;\n    if (jsonData) {\n      const blob = new Blob([JSON.stringify(jsonData, null, 2)], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${baseName}.json`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n      return;\n    }\n    if (pdfUrl) {\n      const a = document.createElement(\"a\");\n      a.href = pdfUrl;\n      a.download = `${baseName}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      return;\n    }\n    if (textData) {\n      const blob = new Blob([textData], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${baseName}.txt`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"riw2-card\",\n    \"aria-live\": \"polite\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"riw2-form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"riw-codigo-input\",\n        className: \"riw2-label\",\n        children: \"C\\xF3digo do im\\xF3vel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"riw2-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"riw-codigo-input\",\n          className: \"riw2-input\",\n          placeholder: \"Ex.: 28\",\n          value: codigo,\n          onChange: e => setCodigo(e.target.value),\n          inputMode: \"numeric\",\n          autoComplete: \"off\",\n          \"aria-describedby\": \"riw2-help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"riw2-btn\",\n          disabled: loading,\n          children: loading ? \"Consultando...\" : \"Consultar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        id: \"riw2-help\",\n        className: \"riw2-help\",\n        children: typeof apiBase === \"string\" ? `Endpoint: ${apiBase}` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riw2-alert\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riw2-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"riw2-spinner\",\n        \"aria-hidden\": true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), !loading && (jsonData || pdfUrl || textData) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riw2-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"riw2-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"riw2-chip\",\n          onClick: onDownload,\n          children: pdfUrl ? \"Baixar PDF\" : jsonData ? \"Baixar JSON\" : \"Baixar TXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"riw2-chip\",\n          href: buildUrl(codigo),\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Abrir API \\u2197\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"riw2-pdfwrap\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"Relat\\xF3rio em PDF\",\n          className: \"riw2-pdf\",\n          src: pdfUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), jsonData && /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"riw2-pre\",\n        children: prettyJson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 24\n      }, this), textData && !pdfUrl && !jsonData && /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"riw2-pre\",\n        children: textData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(ReporteImovelWidget, \"7lM0h4dWOkaBqc4TVIXmCfpULOY=\");\n_c = ReporteImovelWidget;\nvar _c;\n$RefreshReg$(_c, \"ReporteImovelWidget\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","ReporteImovelWidget","apiBase","defaultCodigo","autoFocus","_s","codigo","setCodigo","loading","setLoading","error","setError","jsonData","setJsonData","textData","setTextData","pdfUrl","setPdfUrl","abortRef","lastPdfUrlRef","buildUrl","cod","u","String","trim","base","URL","window","location","origin","toString","qs","URLSearchParams","includes","revokeLastPdf","current","revokeObjectURL","isPdfBlob","blob","type","head","slice","text","startsWith","resetState","fetchData","codArg","abort","controller","AbortController","url","res","fetch","method","headers","Accept","signal","credentials","redirect","ok","fallback","catch","Error","status","statusText","ct","get","toLowerCase","cd","json","JSON","parse","looksLikePdf","urlObj","createObjectURL","textLower","isLikelySpaHtml","err","name","message","params","search","fromUrl","el","document","querySelector","focus","onSubmit","e","preventDefault","prettyJson","stringify","onDownload","baseName","Blob","a","createElement","href","download","body","appendChild","click","remove","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","value","onChange","target","inputMode","autoComplete","disabled","role","onClick","rel","title","src","_c","$RefreshReg$"],"sources":["C:/Users/Best Option Notebook/Desktop/61E/Precificador - Copia (2)/front-end/src/components/ReporteImovelWidget.jsx"],"sourcesContent":["// ============================\r\n// ReporteImovelWidget.jsx\r\n// ============================\r\n\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\n/**\r\n * Widget para consultar /reporteImovel retornando PDF ou JSON.\r\n *\r\n * @param {string} apiBase - Caminho base do endpoint. Pode ser relativo (\"/api/reporteImovel\")\r\n *                           ou absoluto (\"http://localhost:5000/reporteImovel\").\r\n * @param {string} defaultCodigo - Código carregado automaticamente ao montar.\r\n * @param {boolean} autoFocus - Focar o input ao montar (quando não houver defaultCodigo/URL).\r\n */\r\nexport default function ReporteImovelWidget({\r\n  apiBase = \"/api/reporteImovel\",\r\n  defaultCodigo = \"\",\r\n  autoFocus = true,\r\n}) {\r\n  const [codigo, setCodigo] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [jsonData, setJsonData] = useState(null);\r\n  const [textData, setTextData] = useState(\"\");\r\n  const [pdfUrl, setPdfUrl] = useState(\"\");\r\n  const abortRef = useRef(null);\r\n  const lastPdfUrlRef = useRef(\"\");\r\n\r\n  // Resolve apiBase de forma robusta (suporta relativo/absoluto)\r\n  const buildUrl = useCallback(\r\n    (cod) => {\r\n      const u = String(cod ?? \"\").trim();\r\n      const base = (() => {\r\n        try {\r\n          // Se apiBase já é absoluta, new URL não usa origin\r\n          return new URL(apiBase, window.location.origin).toString();\r\n        } catch {\r\n          return apiBase; // fallback\r\n        }\r\n      })();\r\n      const qs = new URLSearchParams({ codigo: u });\r\n      return `${base}${base.includes(\"?\") ? \"&\" : \"?\"}${qs}`;\r\n    },\r\n    [apiBase]\r\n  );\r\n\r\n  const revokeLastPdf = () => {\r\n    if (lastPdfUrlRef.current) {\r\n      URL.revokeObjectURL(lastPdfUrlRef.current);\r\n      lastPdfUrlRef.current = \"\";\r\n    }\r\n  };\r\n\r\n  const isPdfBlob = async (blob) => {\r\n    if (blob.type && blob.type.includes(\"pdf\")) return true;\r\n    try {\r\n      const head = await blob.slice(0, 5).text();\r\n      return head.startsWith(\"%PDF-\");\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const resetState = () => {\r\n    setJsonData(null);\r\n    setTextData(\"\");\r\n    setPdfUrl(\"\");\r\n    revokeLastPdf();\r\n  };\r\n\r\n  const fetchData = useCallback(\r\n    async (codArg) => {\r\n      const cod = String(codArg ?? codigo).trim();\r\n      if (!cod) {\r\n        setError(\"Informe um código.\");\r\n        resetState();\r\n        return;\r\n      }\r\n\r\n      setError(\"\");\r\n      setLoading(true);\r\n      resetState();\r\n\r\n      try {\r\n        if (abortRef.current) abortRef.current.abort();\r\n        const controller = new AbortController();\r\n        abortRef.current = controller;\r\n\r\n        const url = buildUrl(cod);\r\n\r\n        // Pedimos explicitamente JSON ou PDF. Evita alguns servidores devolverem HTML por fallback.\r\n        const res = await fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            // Damos preferência clara a JSON/PDF em vez de */*\r\n            Accept: \"application/json, application/pdf;q=0.9, text/plain;q=0.8, */*;q=0.1\",\r\n            \"X-Requested-With\": \"fetch\", // ajuda alguns back-ends a diferenciar requisições XHR\r\n          },\r\n          signal: controller.signal,\r\n          credentials: \"same-origin\",\r\n          redirect: \"follow\",\r\n        });\r\n\r\n        // Erros HTTP explícitos\r\n        if (!res.ok) {\r\n          const fallback = await res.text().catch(() => \"\");\r\n          throw new Error(\r\n            `HTTP ${res.status} - ${res.statusText}${fallback ? ` | ${fallback.slice(0, 200)}` : \"\"}`\r\n          );\r\n        }\r\n\r\n        const ct = (res.headers.get(\"content-type\") || \"\").toLowerCase();\r\n        const cd = res.headers.get(\"content-disposition\") || \"\";\r\n        const blob = await res.blob();\r\n\r\n        // 1) JSON\r\n        if (ct.includes(\"application/json\")) {\r\n          const text = await blob.text();\r\n          try {\r\n            const json = JSON.parse(text);\r\n            setJsonData(json);\r\n            return;\r\n          } catch {\r\n            // JSON inválido: trata como texto\r\n            setTextData(text);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // 2) PDF (por content-type OU por assinatura OU por Content-Disposition)\r\n        const looksLikePdf =\r\n          ct.includes(\"application/pdf\") ||\r\n          cd.toLowerCase().includes(\"filename=\") ||\r\n          (await isPdfBlob(blob));\r\n\r\n        if (looksLikePdf) {\r\n          const urlObj = URL.createObjectURL(blob);\r\n          setPdfUrl(urlObj);\r\n          lastPdfUrlRef.current = urlObj;\r\n          return;\r\n        }\r\n\r\n        // 3) Texto\r\n        const text = await blob.text();\r\n\r\n        // Heurística: se veio HTML da SPA, sinalizar erro amigável\r\n        const textLower = text.slice(0, 256).toLowerCase();\r\n        const isLikelySpaHtml =\r\n          ct.includes(\"text/html\") ||\r\n          textLower.includes(\"<!doctype html\") ||\r\n          textLower.includes(\"<html\");\r\n\r\n        if (isLikelySpaHtml) {\r\n          setError(\r\n            \"O servidor respondeu com HTML da aplicação (SPA), não com a API. Verifique o caminho do endpoint, o proxy e a configuração do servidor.\"\r\n          );\r\n          setTextData(\"\"); // evita poluir a UI com o HTML inteiro\r\n          return;\r\n        }\r\n\r\n        // Caso seja realmente texto puro útil (ex.: debug), mostramos\r\n        setTextData(text);\r\n      } catch (err) {\r\n        if (err?.name === \"AbortError\") return;\r\n        setError(err?.message || \"Erro na requisição\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [codigo, buildUrl]\r\n  );\r\n\r\n  useEffect(() => () => revokeLastPdf(), []);\r\n\r\n  // Query string ?codigo= ou defaultCodigo\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const fromUrl = params.get(\"codigo\");\r\n    if (fromUrl) {\r\n      setCodigo(fromUrl);\r\n      fetchData(fromUrl);\r\n    } else if (defaultCodigo) {\r\n      setCodigo(defaultCodigo);\r\n      fetchData(defaultCodigo);\r\n    } else if (autoFocus) {\r\n      const el = document.querySelector(\"#riw-codigo-input\");\r\n      if (el) el.focus();\r\n    }\r\n  }, [defaultCodigo, autoFocus, fetchData]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchData();\r\n  };\r\n\r\n  const prettyJson = useMemo(() => {\r\n    try {\r\n      return jsonData ? JSON.stringify(jsonData, null, 2) : \"\";\r\n    } catch {\r\n      return \"\";\r\n    }\r\n  }, [jsonData]);\r\n\r\n  const onDownload = () => {\r\n    const baseName = `reporteImovel_${(codigo || \"resultado\").trim()}`;\r\n    if (jsonData) {\r\n      const blob = new Blob([JSON.stringify(jsonData, null, 2)], { type: \"application/json\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${baseName}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      URL.revokeObjectURL(url);\r\n      return;\r\n    }\r\n    if (pdfUrl) {\r\n      const a = document.createElement(\"a\");\r\n      a.href = pdfUrl;\r\n      a.download = `${baseName}.pdf`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      return;\r\n    }\r\n    if (textData) {\r\n      const blob = new Blob([textData], { type: \"text/plain;charset=utf-8\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${baseName}.txt`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"riw2-card\" aria-live=\"polite\">\r\n      <form className=\"riw2-form\" onSubmit={onSubmit}>\r\n        <label htmlFor=\"riw-codigo-input\" className=\"riw2-label\">\r\n          Código do imóvel\r\n        </label>\r\n        <div className=\"riw2-row\">\r\n          <input\r\n            id=\"riw-codigo-input\"\r\n            className=\"riw2-input\"\r\n            placeholder=\"Ex.: 28\"\r\n            value={codigo}\r\n            onChange={(e) => setCodigo(e.target.value)}\r\n            inputMode=\"numeric\"\r\n            autoComplete=\"off\"\r\n            aria-describedby=\"riw2-help\"\r\n          />\r\n          <button type=\"submit\" className=\"riw2-btn\" disabled={loading}>\r\n            {loading ? \"Consultando...\" : \"Consultar\"}\r\n          </button>\r\n        </div>\r\n        <small id=\"riw2-help\" className=\"riw2-help\">\r\n          {typeof apiBase === \"string\" ? `Endpoint: ${apiBase}` : null}\r\n        </small>\r\n      </form>\r\n\r\n      {error && <div className=\"riw2-alert\" role=\"alert\">{error}</div>}\r\n\r\n      {loading && (\r\n        <div className=\"riw2-loading\">\r\n          <span className=\"riw2-spinner\" aria-hidden />\r\n          <span>Carregando...</span>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && (jsonData || pdfUrl || textData) && (\r\n        <div className=\"riw2-result\">\r\n          <div className=\"riw2-actions\">\r\n            <button type=\"button\" className=\"riw2-chip\" onClick={onDownload}>\r\n              {pdfUrl ? \"Baixar PDF\" : jsonData ? \"Baixar JSON\" : \"Baixar TXT\"}\r\n            </button>\r\n            <a className=\"riw2-chip\" href={buildUrl(codigo)} target=\"_blank\" rel=\"noreferrer\">\r\n              Abrir API ↗\r\n            </a>\r\n          </div>\r\n\r\n          {pdfUrl && (\r\n            <div className=\"riw2-pdfwrap\">\r\n              <iframe title=\"Relatório em PDF\" className=\"riw2-pdf\" src={pdfUrl} />\r\n            </div>\r\n          )}\r\n\r\n          {jsonData && <pre className=\"riw2-pre\">{prettyJson}</pre>}\r\n\r\n          {textData && !pdfUrl && !jsonData && <pre className=\"riw2-pre\">{textData}</pre>}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}