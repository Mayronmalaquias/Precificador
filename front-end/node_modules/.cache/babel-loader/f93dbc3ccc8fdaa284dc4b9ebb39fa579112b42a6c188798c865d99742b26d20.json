{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Best Option Notebook\\\\Desktop\\\\61E\\\\Precificador - Copia (2)\\\\front-end\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // 1. Renomear o estado de 'email' para 'username'\n  const [username, setUsername] = useState('');\n  const [senha, setSenha] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // 2. Usar a variável de estado 'username' aqui\n          username: username,\n          // ou simplesmente 'username,' se a chave e a variável tiverem o mesmo nome\n          password: senha\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.login === true) {\n        localStorage.setItem('auth', 'true');\n        navigate('/interno');\n      } else {\n        alert(data.error || 'Credenciais inválidas');\n      }\n    } catch (error) {\n      console.error('Erro ao fazer login:', error);\n      alert('Erro de conexão com o servidor.');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // No React, é uma boa prática usar 'className' em vez de 'class' para atributos CSS\n    _jsxDEV(\"div\", {\n      className: \"divLogin\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            // 3. Alterar o type do input\n            type: \"text\"\n            // 4. Usar o estado e setter corretos\n            ,\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            placeholder: \"Digite seu nome de usu\\xE1rio\" // Opcional: adicionar placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Senha:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: senha,\n            onChange: e => setSenha(e.target.value),\n            required: true,\n            placeholder: \"Digite sua senha\" // Opcional: adicionar placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Login, \"9G3qSYTY3I7xYlkloBWaiYJ/FIs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","senha","setSenha","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","data","json","ok","login","localStorage","setItem","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Best Option Notebook/Desktop/61E/Precificador - Copia (2)/front-end/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../assets/css/login.css';\r\n\r\nfunction Login() {\r\n  // 1. Renomear o estado de 'email' para 'username'\r\n  const [username, setUsername] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          // 2. Usar a variável de estado 'username' aqui\r\n          username: username, // ou simplesmente 'username,' se a chave e a variável tiverem o mesmo nome\r\n          password: senha\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok && data.login === true) {\r\n        localStorage.setItem('auth', 'true');\r\n        navigate('/interno');\r\n      } else {\r\n        alert(data.error || 'Credenciais inválidas');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao fazer login:', error);\r\n      alert('Erro de conexão com o servidor.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    // No React, é uma boa prática usar 'className' em vez de 'class' para atributos CSS\r\n    <div className=\"divLogin\"> {/* Alterado class para className */}\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Username:\r\n          <input\r\n            // 3. Alterar o type do input\r\n            type=\"text\"\r\n            // 4. Usar o estado e setter corretos\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n            placeholder=\"Digite seu nome de usuário\" // Opcional: adicionar placeholder\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Senha:\r\n          <input\r\n            type=\"password\"\r\n            value={senha}\r\n            onChange={(e) => setSenha(e.target.value)}\r\n            required\r\n            placeholder=\"Digite sua senha\" // Opcional: adicionar placeholder\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Entrar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}